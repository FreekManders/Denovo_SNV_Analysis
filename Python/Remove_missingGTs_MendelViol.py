import os
import argparse
import datetime
from timeit import default_timer as timer

###Start timer
start = timer()
time = datetime.datetime.now().strftime("%Y-%m-%d-%H-%M")
print "Start running script at: {0}".format(time)

###Parse arguments
parser = argparse.ArgumentParser(description = "This script filters out sites with missing GTs in a MendelViol file that was generated by PhaseByTransmission.")
parser.add_argument("-f", "--FILELIST", default = "/hpc/cog_bioinf/cuppen/project_data/Freek_SNV/FilelistFreek.txt", help = "The file list")
parser.add_argument("-o", "--OUTPUT_PATH", default = "/hpc/cog_bioinf/cuppen/project_data/Freek_SNV", help = "The output path")
parser.add_argument("-w", "--OVERWRITE", default = "False", help = "Overwrite the results if they already exist.")
args = parser.parse_args()

filelist = args.FILELIST
outdir = "{0}/Callableregion_NrMendelViols".format(args.OUTPUT_PATH)

###Get families from the filelist.
families = []
with open(filelist) as f1:
	next(f1)
	for line in f1:
		line = line.rstrip()
		columns = line.split("\t")
		family = columns[3]
		if family not in families:
			families.append(family)

###Remove the missing GTs from the MendelViol files.
for family in families:
	MVfname = "{0}/PBT/{1}.MendelViol".format(outdir, family)
	outfname = "{0}/PBT/{1}_fullgenotypes.MendelViol".format(outdir, family)
	if not os.path.isfile(MVfname) or (os.path.isfile(outfname) and not args.OVERWRITE == "true"):
		continue
	with open(MVfname, "r") as MVfile:
		with open(outfname, "w") as outfile:
			header_line = next(MVfile)
			outfile.write(header_line)
			for line in MVfile:
				line = line.rstrip()
				line = line.split("\t")
				mothergt = line[5]
				fathergt = line[9]
				childgt = line[13]
				if "." not in mothergt and "." not in fathergt and "." not in childgt:
					line = "\t".join(line)
					outfile.write("{0}\n".format(line))
	print "Removed missing genotypes for family: {0}".format(family)	
	
###End timer
timeend = datetime.datetime.now().strftime("%Y-%m-%d-%H-%M")
print "Finished running script at: {0}".format(timeend)
end = timer()
execution_time = int(end - start)
execution_time = datetime.timedelta(seconds = execution_time)
print "Elapsed time: {0}".format(execution_time)
